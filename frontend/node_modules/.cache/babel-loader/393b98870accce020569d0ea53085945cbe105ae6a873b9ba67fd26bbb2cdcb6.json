{"ast":null,"code":"var _jsxFileName = \"D:\\\\SGU(1)\\\\official\\\\4-1\\\\KTPM\\\\testfood\\\\food-ordering-app\\\\frontend\\\\src\\\\components\\\\home_menu\\\\CategoriesPage.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useError } from '../common/ErrorDisplay';\nimport ApiService from '../../services/ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoriesPage = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const navigate = useNavigate();\n  const {\n    ErrorDisplay,\n    showError\n  } = useError();\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await ApiService.getAllCategories();\n        if (response.statusCode === 200) {\n          setCategories(response.data);\n        } else {\n          showError(response.message);\n        }\n      } catch (error) {\n        var _error$response, _error$response$data;\n        showError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n      }\n    };\n    fetchCategories();\n  }, []);\n  const handleCategoryClick = categoryId => {\n    navigate(`/menu?category=${categoryId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"categories-page\",\n    children: [/*#__PURE__*/_jsxDEV(ErrorDisplay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"categories-title\",\n      children: \"Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categories-grid\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-card\",\n        onClick: () => handleCategoryClick(category.id),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"category-name\",\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"category-description\",\n          children: category.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, category.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(CategoriesPage, \"HHqbwjKCUTh0M3EjU9Nz+HFnRw8=\", false, function () {\n  return [useNavigate, useError];\n});\n_c = CategoriesPage;\nexport default CategoriesPage;\nvar _c;\n$RefreshReg$(_c, \"CategoriesPage\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useError","ApiService","jsxDEV","_jsxDEV","CategoriesPage","_s","categories","setCategories","navigate","ErrorDisplay","showError","fetchCategories","response","getAllCategories","statusCode","data","message","error","_error$response","_error$response$data","handleCategoryClick","categoryId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","category","onClick","id","name","description","_c","$RefreshReg$"],"sources":["D:/SGU(1)/official/4-1/KTPM/testfood/food-ordering-app/frontend/src/components/home_menu/CategoriesPage.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useError } from '../common/ErrorDisplay';\r\nimport ApiService from '../../services/ApiService';\r\n\r\nconst CategoriesPage = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const navigate = useNavigate();\r\n    const { ErrorDisplay, showError } = useError();\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchCategories = async () => {\r\n            try {\r\n                const response = await ApiService.getAllCategories();\r\n                if (response.statusCode === 200) {\r\n                    setCategories(response.data)\r\n                } else {\r\n                    showError(response.message);\r\n                }\r\n\r\n            } catch (error) {\r\n                showError(error.response?.data?.message || error.message);\r\n\r\n            }\r\n        };\r\n\r\n        fetchCategories();\r\n    }, []);\r\n\r\n\r\n    const handleCategoryClick = (categoryId) => {\r\n        navigate(`/menu?category=${categoryId}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"categories-page\">\r\n            <ErrorDisplay />\r\n            <h1 className=\"categories-title\">Categories</h1>\r\n            <div className=\"categories-grid\">\r\n                {categories.map((category) => (\r\n                    <div\r\n                        key={category.id}\r\n                        className=\"category-card\"\r\n                        onClick={() => handleCategoryClick(category.id)}\r\n                    >\r\n                        <h2 className=\"category-name\">{category.name}</h2>\r\n                        <p className=\"category-description\">{category.description}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div >\r\n    )\r\n\r\n\r\n}\r\nexport default CategoriesPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}