{"ast":null,"code":"var _jsxFileName = \"D:\\\\SGU(1)\\\\official\\\\4-1\\\\KTPM\\\\testfood\\\\food-ordering-app\\\\frontend\\\\src\\\\components\\\\payment\\\\ProcessPaymenttPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useError } from '../common/ErrorDisplay';\nimport Payment from \"./Payment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProcessPaymenttPage = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const [paymentCompleted, setPaymentCompleted] = useState(false);\n  const navigate = useNavigate();\n  const {\n    ErrorDisplay,\n    showError\n  } = useError();\n  const [orderDetails, setOrderDetails] = useState({\n    orderId: '',\n    amount: 0\n  });\n  useEffect(() => {\n    const orderId = searchParams.get('orderid');\n    const amount = searchParams.get('amount');\n    if (!orderId || !amount) {\n      showError('Missing order information in URL');\n      return;\n    }\n    if (isNaN(amount)) {\n      showError('Invalid amount specified');\n      return;\n    }\n    setOrderDetails({\n      orderId: orderId,\n      amount: amount\n    });\n  }, [searchParams]);\n  const handlePaymentSuccess = paymentIntent => {\n    console.log('Payment succeeded:', paymentIntent);\n    setPaymentCompleted(true);\n    setTimeout(() => {\n      navigate('/my-order-history');\n    }, 8000);\n  };\n  if (paymentCompleted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-success\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Payment Successful!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Thank you for your purchase. Order ID: \", orderDetails.orderId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You will receive an email of your payment success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkout-container\",\n    children: [/*#__PURE__*/_jsxDEV(ErrorDisplay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Payment, {\n      amount: orderDetails.amount,\n      orderId: orderDetails.orderId,\n      onSuccess: handlePaymentSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(ProcessPaymenttPage, \"3enRwcMvBYOlbWO9c/Y/uKuOoJM=\", false, function () {\n  return [useSearchParams, useNavigate, useError];\n});\n_c = ProcessPaymenttPage;\nexport default ProcessPaymenttPage;\nvar _c;\n$RefreshReg$(_c, \"ProcessPaymenttPage\");","map":{"version":3,"names":["useState","useEffect","useNavigate","useSearchParams","useError","Payment","jsxDEV","_jsxDEV","ProcessPaymenttPage","_s","searchParams","paymentCompleted","setPaymentCompleted","navigate","ErrorDisplay","showError","orderDetails","setOrderDetails","orderId","amount","get","isNaN","handlePaymentSuccess","paymentIntent","console","log","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","_c","$RefreshReg$"],"sources":["D:/SGU(1)/official/4-1/KTPM/testfood/food-ordering-app/frontend/src/components/payment/ProcessPaymenttPage.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { useError } from '../common/ErrorDisplay';\r\nimport Payment from \"./Payment\";\r\n\r\nconst ProcessPaymenttPage = () => {\r\n\r\n    const [searchParams] = useSearchParams();\r\n    const [paymentCompleted, setPaymentCompleted] = useState(false);\r\n\r\n\r\n    const navigate = useNavigate();\r\n    const { ErrorDisplay, showError } = useError();\r\n\r\n    const [orderDetails, setOrderDetails] = useState({\r\n        orderId: '',\r\n        amount: 0\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        const orderId = searchParams.get('orderid');\r\n        const amount = searchParams.get('amount');\r\n\r\n\r\n        if (!orderId || !amount) {\r\n            showError('Missing order information in URL');\r\n            return;\r\n        }\r\n\r\n\r\n        if (isNaN(amount)) {\r\n            showError('Invalid amount specified');\r\n            return;\r\n        }\r\n\r\n        setOrderDetails({\r\n            orderId: orderId,\r\n            amount: amount\r\n        });\r\n\r\n\r\n    }, [searchParams])\r\n\r\n\r\n\r\n\r\n\r\n    const handlePaymentSuccess = (paymentIntent) => {\r\n\r\n        console.log('Payment succeeded:', paymentIntent);\r\n\r\n        setPaymentCompleted(true);\r\n\r\n        setTimeout(() => {\r\n            navigate('/my-order-history');\r\n        }, 8000);\r\n    };\r\n\r\n\r\n\r\n    if (paymentCompleted) {\r\n        return (\r\n            <div className=\"payment-success\">\r\n                <h2>Payment Successful!</h2>\r\n                <p>Thank you for your purchase. Order ID: {orderDetails.orderId}</p>\r\n                <p>You will receive an email of your payment success</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"checkout-container\">\r\n            <ErrorDisplay />\r\n\r\n            {/* <h1>Food App</h1> */}\r\n\r\n            <Payment\r\n                amount={orderDetails.amount}\r\n                orderId={orderDetails.orderId}\r\n                onSuccess={handlePaymentSuccess}\r\n            />\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ProcessPaymenttPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}